/*============Views===========*/
/*.HorizFlex{
  display: flex;
  flex-flow: row nowrap;
  gap: 0em 1em;
  align-items: center;
  margin: 0vw 10vw 0vw 5vw;
}*/

/*.WrappedhorizFlex{
  display: flex;
  flex-flow: row wrap;
  gap: 0em 1em;
  align-items: center;
}*/

/*.JustifySpaceBetweenDisplay{
  justify-content: space-between;
}
.JustifySpaceEvenlyDisplay{
  justify-content: space-evenly;
}
.JustifySpaceAroundDisplay{
  justify-content: space-around;
}
.JustifyFlexStartDisplay{
  justify-content: flex-start;
}
.JustifyCenterDisplay{
  justify-content: center;
}
.MigrationButtonGroup{
  justify-content: center;
  flex-grow: 1;
}
.MigrationType{
  flex-grow: 1;
}

.Tabulation{
  text-indent:15vw;
}
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}

.TextInput{
  background-color: transparent;/*Remove default background*/
  border: solid 2px #555;
  border-radius: 2em;
  padding: 0.5em;
  margin: 0;
  /* width: 100%; */
  font-family: inherit;
  font-size: inherit;
  cursor: inherit;
  line-height: inherit;
  outline: none;/*Remove the border when focused */
  /* min-width: 28em; */
}

.TextInput:focus{
  border-color: #000;
}

.InputElement{
  width: 30vw;
}

.LoadingContainer{
  position:relative;
  height: 15em;
}
.LoadingText{
  position: absolute;
  width: 12em;
  text-align: center;
}
.LoadingCircle{
  position: absolute;
  width: 15em;
  height: 15em;
  color: #12132b;
  -webkit-animation:loading-circle_spin 10s linear infinite;
  -moz-animation:loading-circle_spin 10s linear infinite;
  animation:loading-circle_spin 10s linear infinite;
}
@-moz-keyframes loading-circle_spin { 100% { -moz-transform: rotate(360deg); } }
@-webkit-keyframes loading-circle_spin { 100% { -webkit-transform: rotate(360deg); } }
@keyframes loading-circle_spin { 100% { -webkit-transform: rotate(360deg); transform:rotate(360deg); } }

/* Careful, this css property needs to be after clickableRoundButton definition for proper overwrite*/
.ColoredButton{
  padding: 8px 16px;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  border-radius: 30px;
  border-width: 0em;
  font-size: .88rem;
  line-height: 1.5rem;
  text-decoration: none;
  transition: 0.5s;
  background-image: linear-gradient(to right, #3e287a 0%, #af1540 100%);
  background-size: 200% auto;
  color: #fff;
  white-space: nowrap;
}
.ColoredButton:hover{
  background-position: right center;
}
.ColoredButton:active{
  background-image: linear-gradient(to right, #bf1560 0%, #bf1560 100%);
}
.ColoredButton:disabled, .ColoredButton[disabled]{
  background-image: linear-gradient(to right, #ccc 0%, #ccc 100%);
}
.ColoredButton:target{
  background-image: linear-gradient(to right, #df3580 0%, #df3580 100%);
}

/*Container for several elements lines placed one under the other  */
.Card{
  display: flex;
  flex-flow: column nowrap;
  gap: 1em 0em;
  margin: 0vw 3vw;
}

.NoMargin{
  margin: 0vw 0vw;
}
/*A card with no gap between lines */
.CompactCard{
  display: flex;
  flex-flow: column nowrap;
}

/*Represent one line contained in a Card */
.CardLine{
  display: flex;
  flex-flow: row nowrap;
  gap: 0vw 2vw;
  align-items: center;
  /*margin: 0vw 0vw 0vw 5vw;*/
}

.DataDisplay{
  align-items: flex-start;
}

.MigrationButtonLine{
  display: flex;
  flex-flow: row nowrap;
  gap: 0vw 5vw;
  justify-content: center;
}

/*Containers for one element of a card line */
.LineElement{
  width: 100%;
}
.CenteredCardLine{
  display: flex;
  flex-flow: row nowrap;
  gap: 0vw 2vw;
  justify-content: center;
}

.CardTitle{
  font-size: 2em;
  margin: 2vw 0vw 0vw 0vw;/*To override CardLine margin */
  text-align: center;
}

.TextElement{
  max-width: 15vw;
}

.DataText{
  font-weight: bold;
}
